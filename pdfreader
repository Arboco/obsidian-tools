#! /usr/bin/env fish 

set script_dir (realpath (status dirname))

function help_function
    echo "Options:"
    echo "  -i       History"
end

argparse --name=gameinit i/history h/help 'n/name=' -- $argv
or return

set obsidian_folder (ot_config_grab "ObsidianMainFolder")
set notes (ot_config_grab "NotesFolder")
set resources (ot_config_grab "ObsidianResourceFolder")

if set -q _flag_i
    set last (rg -oP "(?<=last_read: ).*" $obsidian_folder/$notes)
    for i in $last
        set mdsplit (echo $i | string split ":")[1]
        if rg -q '^pdf:' $mdsplit
            set title (echo $i | rg -o -r '$1' '.*/([^/]+)\.md:' )
            set last_read (echo $i | string split ".md:")[2]
            set final_string "$last_read | $title"
            set final_list $final_list $final_string
        end
    end
    set final_sorted_list (printf "%s\n" $final_list | sort -r)
    for i in $final_sorted_list
        set cleaned_final_sorted_list $cleaned_final_sorted_list (echo $i | string split "| ")[2].md
    end

    set selection (for i in $cleaned_final_sorted_list; echo $i; end | fzf --style=full --preview "$script_dir/scripts/media-fzf.fish {}")
    set obsidian_md (fd -t f -F $selection $obsidian/$notes)
end

if not set -q _flag_i
    set obsidian_md (rg -l "pdf:" $obsidian_folder | sort -r | fzf --delimiter='/' --with-nth=-1 --style=full --preview "$script_dir/scripts/media-fzf.fish {}")
end
set raw_file_name (basename -s ".md" $obsidian_md)

echo "$obsidian_md" >/tmp/obsidian_last.txt
$script_dir/scripts/pdf_input.fish "$obsidian_md" &

set pdf_path (cat $obsidian_md | grep 'pdf:')
set pdf_path (string replace -r -a '\[|\]|"' '' -- "$pdf_path")
set pdf_path (echo $pdf_path | grep -oP '(?<=pdf: ).*$')
set pdf_path (fd -t f -F "$pdf_path" $obsidian_folder/$resources)

if cat $obsidian_md | grep -q "pages:"
    set page_num (cat $obsidian_md | rg "pages:" | rg -o "[0-9]+")
    echo $page_num
else
    set page_num 0
end

okular --page $page_num $pdf_path &
sleep 2
set okular_instance (echo (qdbus | grep okular)[1] | string trim -lr)
echo $okular_instance

set total_pages (pdfinfo $pdf_path | awk '/^Pages:/ {print $2}')
if cat $obsidian_md | grep "pages_total:"
else
    sed -i "/^pdf:/a\\pages_total: $total_pages" "$obsidian_md"
end

echo 0 | xclip -selection clipboard
set clipboard_old 0
while qdbus | grep $okular_instance
    set current_page (qdbus $okular_instance /okular org.kde.okular.currentPage)
    echo $current_page

    set clipboard_new (xclip -o -selection clipboard)
    if string match $clipboard_old $clipboard_new
    else
        newline_prepper $obsidian_md
        set cur_date (date +"%d-%m-%Y %H:%M:%S")
        set clipboard_old $clipboard_new
        echo ">[!quote] Page: $current_page `$cur_date`" >>$obsidian_md
        echo $clipboard_new >>$obsidian_md
    end

    sleep 1
end

kill $(jobs -p)

set page_difference (math $current_page - $page_num)

if grep -q "pages:" $obsidian_md
    sed -i '/pages:/d' "$obsidian_md"
end
sed -i "/^pdf:/a\\pages: $current_page" "$obsidian_md"

set cur_date (date +"%Y-%m-%dT%H:%M:%S")
if rg "^last_read:" $obsidian_md
    sed -i '/last_read:/d' $obsidian_md
end
sed -i "/^date:/a\\last_read: $cur_date" $obsidian_md

if grep "# Info" $obsidian_md
else
    echo "# Info" >>$obsidian_md
    echo "## Timeline" >>$obsidian_md
    echo "#" >>$obsidian_md
end

set cur_date (date +%Y-%m-%d)

if test $current_page -gt $page_num
    if grep "Read:.*$cur_date" $obsidian_md
        set info_session_time (echo "Existing session is getting increased by $page_difference pages.")
        cp $obsidian_md /tmp/clone.md
        awk -v ex="$page_difference" -v date="$cur_date" '$0 ~ date {
      for (i = 1; i <= NF; i++) { 
        if ($i ~ /^[0-9]+$/) $i = $i + ex;} 
        }
        { print }' /tmp/clone.md >$obsidian_md
    else

        sed "/^## Timeline/{:a; n; /^#/!ba; i\\
\\
>[!info] Read: $page_difference pages [[$cur_date]]
}" $obsidian_md >/tmp/clone2.md
        mv /tmp/clone2.md $obsidian_md
    end
end

daily-note-injector pagesread $page_difference

echo $obsidian_md
echo $pdf_path
