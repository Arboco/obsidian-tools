#! /usr/bin/env fish

set obsidian_folder (ot_config_grab "ObsidianMainFolder")
set notes (ot_config_grab "NotesFolder")

set term_one (rg -l "  - pool" $obsidian_folder/$notes)

set script_dir (realpath (status dirname))

set pool_categories (ot_config_grab "PoolCategories")
set pool_categories (string split "|" $pool_categories)
set chosen_category (gum choose $pool_categories)
set selection (gum choose "History" "Algorithm" "Select" "Unrated" "Random")

if string match -q History $selection
    set pool_history (cat $HOME/.config/ortscripts/pool-history)
    set filterd_history (rg -l "$chosen_category" $pool_history)
    set target_md (gum choose $filterd_history)
end

if string match -q Select $selection
    set tag_selection (rg -l "  - $chosen_category" $term_one)
    set target_md (gum choose $tag_selection)
end

if string match -q Random $selection
    set tag_selection (rg -l "  - $chosen_category" $term_one)
    set array_length (count $tag_selection)
    set random_selection (random 1 $array_length)
    set target_md $tag_selection[$random_selection]
end

set base_name (basename $target_md)
set history_config "$HOME/.config/ortscripts/pool-history"
sed -i "/$base_name/d" $history_config
sed -i "1i $target_md" $history_config

echo $target_md >/tmp/the-pool.txt

if grep -q 'uuid:' $target_md
    set uuid (grep -oP '(?<=uuid: ).*' $target_md)
else
    set uuid (uuidgen)
    sed -i "/^tags:/i\\uuid: $uuid" "$target_md"
end

if grep -qoP "(?<=session: ).*" $target_md
    set session_number (grep -oP "(?<=session: ).*" $target_md)
    set session_number (math $session_number + 1)
else
    set session_number 1
end
echo "# Session $session_number" >>$target_md
echo "" >>$target_md

xset s off
xset -dpms
$script_dir/scripts/pool-record_input.fish $uuid &

obsidian "obsidian://$target_md" >/dev/null 2>&1
set start (date +%s)

echo "From 0-100 describe the value of this subject:"
read user_value
while true
    if string match -qr '^(100|[1-9]?[0-9])$' -- $user_value
        break
    else
        echo "Invalid input, only number 0-100 allowed, try again:"
        read user_value
    end
end

xset s on
xset +dpms
kill $(jobs -p)

set end (date +%s)
set cur_date (date +%d.%m.%y)
set result (math $end - $start)
set result_minutes (math round $result / 60)

if grep -q 'session:' $target_md
    cp $target_md /tmp/clone.md
    awk '/session/ { 
  for (i = 1; i <= NF; i++) { 
        if ($i ~ /^[0-9]+$/) $i = $i + 1; 
    } 
    } { print }' /tmp/clone.md >$target_md
else
    sed -i "/^tags:/i\\session: 1" "$target_md"
end

if grep -q 'time:' $target_md
    cp $target_md /tmp/clone.md
    awk -v var="$result" '/playtime/ { 
  for (i = 1; i <= NF; i++) { 
        if ($i ~ /^[0-9]+$/) $i = $i + var; 
    } 
    } { print }' /tmp/clone.md >$target_md
else
    sed -i "/^session:/i\\time: $result" "$target_md"
end

if grep -q 'value:' $target_md
    sed -i '/value:/d' "$target_md"
end
sed -i "/^time:/a\\value: $user_value" "$target_md"

set date_last (date +%Y-%m-%d)
if grep -q 'date:' $target_md
    sed -i '/date:/d' "$target_md"
end
sed -i "/^time:/i\\date: $date_last" "$target_md"
sed -i "/^# Session $session_number/a\\>[!info] Learned: $result_minutes minutes - $cur_date Value: $user_value" "$target_md"

rm /tmp/the-pool.txt
