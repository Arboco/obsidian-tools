#! /usr/bin/env fish 

# gameinit creates this file on launch 
set obsidian_file (cat /tmp/obsidian_last.txt)
set last_recorded_file /tmp/ot_last_recorded_file

function help_function
    echo -e "Usage: gn \"message\""
    echo "Options:"
    echo "  -m       Generic message"
    echo "  -t       the-card insert"
    echo "  -r       Create something to #research"
    echo "  -l       Create link name link"
    echo "  -s       Add newline after quote"
    echo "  -d       Create message to delete"
    echo "  -c       Continously cite copied text"
    echo "  -i       Transforms last recorded file into I card"
    echo "  -q       Transforms last recorded file into Q card"
end

argparse --name=gn h/help c/cite g/gold t/task d/delete r/research q/question s/space i/inspiration l/link 'n/name=' -- $argv
or return

if set -q _flag_h
    help_function
    exit
end

newline_prepper $obsidian_file

if set -q _flag_t
    echo "$argv[1]" >>$obsidian_file
    echo "$argv[2]" >>$obsidian_file
    exit
end

if set -q _flag_d
    echo "- [f] #delete $argv[1]" >>$obsidian_file
    exit
end

if set -q _flag_i
    set file (cat $last_recorded_file)
    awk -v val="$file" '$0 != val' $obsidian_file >tmp && mv tmp $obsidian_file
    echo ">[!info] " >>$obsidian_file
    echo "I: $argv[1]" >>$obsidian_file
    echo "$argv[2]" >>$obsidian_file
    echo "$file" >>$obsidian_file
    exit
end

if set -q _flag_q
    set file (cat $last_recorded_file)
    awk -v val="$file" '$0 != val' $obsidian_file >tmp && mv tmp $obsidian_file
    echo ">[!question] " >>$obsidian_file
    echo "Q: $argv[1]" >>$obsidian_file
    echo "$argv[2]" >>$obsidian_file
    echo "$file" >>$obsidian_file
    exit
end

if set -q _flag_r
    echo "- [ ] #research $argv[1]" >>$obsidian_file
    exit
end

if set -q _flag_l
    echo "[$argv[1]]($argv[2])" >>$obsidian_file
    exit
end

if set -q _flag_c
    echo 0 | xclip -selection clipboard
    set clipboard_old 0
    while true
        set clipboard_new (xclip -o -selection clipboard)
        if string match $clipboard_old $clipboard_new
        else
            set cur_date (date +"%d-%m-%Y %H:%M:%S")
            set clipboard_old $clipboard_new
            echo ">[!quote] `$cur_date`" >>$obsidian_file
            echo $clipboard_new >>$obsidian_file
            echo \a
        end

        sleep 1
    end
end

if set -q _flag_g
    if not test -z $argv[2]
        set header $argv[1]
    end
    set cur_date (date +"%d-%m-%Y %H:%M:%S")
    if not test -z $header
        echo ">[!gold] $header `$cur_date`" >>$obsidian_file
        echo "$argv[2]" >>$obsidian_file
        echo \a
    else
        echo ">[!gold] `$cur_date`" >>$obsidian_file
        echo "$argv[1]" >>$obsidian_file
        echo \a
    end
    exit
end

set cur_date (date +"%d-%m-%Y %H:%M:%S")
echo ">[!note] `$cur_date`" >>$obsidian_file
echo "$argv[1]" >>$obsidian_file
