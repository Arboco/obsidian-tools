#! /usr/bin/env fish 

# gameinit creates this file on launch 
set obsidian_file (cat /tmp/obsidian_last.txt)
set last_recorded_file /tmp/ot_last_recorded_file

function help_function
    echo -e "Usage: gn \"message\""
    echo "Options:"
    echo "  -m       Generic message"
    echo "  -t       the-card insert"
    echo "  -r       Create something to #research"
    echo "  -l       Create link"
    echo "  -s       Add newline after quote"
    echo "  -d       Create message to delete"
    echo "  -c       Continously cite copied text"
    echo "  -i       Transforms last recorded file into I card"
    echo "  -q       Transforms last recorded file into Q card"
end

argparse --name=gn h/help t/task d/delete r/research q/question s/space i/inspiration l/link 'n/name=' -- $argv
or return

if set -q _flag_h
    help_function
    exit
end

if set -q _flag_t
    echo "$argv[1]" >>$obsidian_file
    echo "$argv[2]" >>$obsidian_file
    echo "" >>$obsidian_file
    exit
end

if set -q _flag_d
    echo -e "- [f] #delete $argv[1]\n" >>$obsidian_file
    exit
end

if set -q _flag_i
    set file (cat $last_recorded_file)
    awk -v val="$file" '$0 != val' $obsidian_file >tmp && mv tmp $obsidian_file
    echo ">[!info] " >>$obsidian_file
    echo "I: $argv[1]" >>$obsidian_file
    echo "$argv[2]" >>$obsidian_file
    echo "$file" >>$obsidian_file
    echo "" >>$obsidian_file
    exit
end

if set -q _flag_q
    set file (cat $last_recorded_file)
    awk -v val="$file" '$0 != val' $obsidian_file >tmp && mv tmp $obsidian_file
    echo ">[!question] " >>$obsidian_file
    echo "Q: $argv[1]" >>$obsidian_file
    echo "$argv[2]" >>$obsidian_file
    echo "$file" >>$obsidian_file
    echo "" >>$obsidian_file
    exit
end

if set -q _flag_r
    echo -e "- [ ] #research $argv[1]\n" >>$obsidian_file
    exit
end

if set -q _flag_l
    echo -e "[$argv[1]]($argv[2])\n" >>$obsidian_file
    exit
end

if set -q _flag_c
    set raw_quote
    set highlight
    echo -n | xclip -selection clipboard
    echo "Insert Quote"
    while true
        set clipboard (xclip -o -selection clipboard)
        if not test -z $clipboard
            set raw_quote (echo $clipboard)
            echo -n | xclip -selection clipboard
            echo "Insert Highlight"
            while test -z $highlight
                set highlight (xclip -o -selection clipboard)
                sleep 1
            end
            set format_quote (echo $raw_quote | sed "s/$highlight/==$highlight==/g")
            echo "" >>$obsidian_file
            echo ">[!quote] $format_quote" >>$obsidian_file
            echo -n | xclip -selection clipboard
            set -e highlight
            echo "Insert Quote"

            if set -q _flag_s
                echo "" >>$obsidian_file
            end
        end
        sleep 1
    end
end

echo "" >>$obsidian_file
echo "$argv[1]" >>$obsidian_file
