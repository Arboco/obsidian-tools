#! /usr/bin/env fish 

set script_dir (realpath (status dirname))
set browser (ot_config_grab "BrowserManga")
set obsidian_folder (ot_config_grab "ObsidianMainFolder")
set notes (ot_config_grab "NotesFolder")
set resources (ot_config_grab "ObsidianResourceFolder")

function help_function
    echo "Options:"
    echo "  -i       History"
end

argparse --name=gameinit i/history h/help 'n/name=' -- $argv
or return

if set -q _flag_h
    help_function
    exit
end

if set -q _flag_i
    set selection_last_seen (rg -oP "(?<=last_read: ).*" $obsidian_folder/$notes)
    for i in $selection_last_seen
        set mdsplit (echo $i | string split ":")[1]
        if rg -q '^mangapath:' $mdsplit
            set t_title (echo $i | rg -o -r '$1' '.*/([^/]+)\.md:' )
            set t_last_played (echo $i | string split ".md:")[2]
            set final_string "$t_last_played | $t_title"
            set final_list $final_list $final_string
        end
    end
    set final_sorted_list (printf "%s\n" $final_list | sort -r)
    for i in $final_sorted_list
        set cleaned_final_sorted_list $cleaned_final_sorted_list (echo $i | string split "| ")[2].md
    end

    set selection (for i in $cleaned_final_sorted_list; echo $i; end | fzf --style=full --preview "$script_dir/scripts/media-fzf.fish {}")
    set manga_md (fd -t f -g $selection $obsidian/$notes)
end

if test -z $manga_md
    set manga_md (rg -l "mangapath:" $obsidian_folder/$notes/ | fzf --delimiter='/' --with-nth=-1 --style=full --preview "$script_dir/scripts/media-fzf.fish {}")
end
set folder_title (basename -s ".md" $manga_md)
set folder_title_sanitized (echo $folder_title | tr '[:upper:]' '[:lower:]' | sed 's/ /-/g')
set mangapath (cat $manga_md | grep 'mangapath:' | grep -oP '(?<=mangapath: ).*$')
if rg -q "^volumepath:" $manga_md
    set volume_path (cat $manga_md | grep 'volumepath:' | grep -oP '(?<=volumepath: ).*$')
else
    set volume_path (find "$mangapath" -type f -iname "*.html" | fzf --delimiter='/' --with-nth=-1)
    sed -i "/^mangapath:/a\\volumepath: $volume_path" "$manga_md"
end
set volume_info (basename -s ".html" "$volume_path")
set volume_number (echo $volume_info | grep -oP "[0-9]+" | sed 's/^0*//')
set volume_name (echo "$folder_title Volume $volume_number")
set total_volume (rg -q "^volumes:" $manga_md | grep -oP "[0-9]+")
set volume_md (echo $obsidian_folder/$notes/anime_db/obsidian-tools/manga/$folder_title_sanitized/$volume_name.md)

mkdir -p "$obsidian_folder/$notes/anime_db/obsidian-tools/manga/$folder_title_sanitized"
echo "$volume_md" >/tmp/obsidian_last.txt

if rg -q "^origin:" $volume_md
else
    echo --- >>$volume_md
    echo "origin: \"[[$folder_title]]\"" \
        \n"volume: $volume_number" \
        \n"tags:" \
        \n"  - manga-reader" \
        \n"  - db" \
        \n"---" >>$volume_md
end

$script_dir/scripts/manga_input.fish "$manga_md" "$volume_md" &
firefox "$volume_path"

read selection

kill $(jobs -p)

set cur_date (date +"%Y-%m-%dT%H:%M:%S")
set short_date (date +"%Y-%m-%d")

if cat $volume_md | rg "pages:"
    set old_page (cat $volume_md | rg "pages:" | rg -o "[0-9]+")
else
    set old_page 0
end

if grep -q "pages:" $volume_md
    sed -i '/pages:/d' "$volume_md"
end
sed -i "/^volume:/a\\pages: $selection" "$volume_md"

if string match f $selection
    sed -i '/pages:/d' "$volume_md"
    sed -i '/volumepath:/d' "$manga_md"
    sed -i "/^tags:/i\\finished-date: $cur_date" "$volume_md"
    sed -i "/read-volumes:/d" "$manga_md"
    sed -i "/^volumes:/a\\read-volumes: $volume_number" "$manga_md"
    if test $volume_number -eq $total_volume
        sed -i "/^tags:/i\\finished: $cur_date" "$manga_md"
        sed -i "/status:/d" "$manga_md"
        sed -i "/^score:/a\\status: Completed" "$manga_md"
    end
end

set dataviewcheck false
if grep -q "```dataview" $manga_md; or grep -q "```base" $manga_md
    set dataviewcheck true
end

if string match false $dataviewcheck; and test -f $HOME/.config/ortscripts/manga-dataview-insert
    sed -i "/^tags:/i\\cssclasses:" "$manga_md"
    sed -i "/^cssclasses:/a\\  - cards" "$manga_md"
    sed -i "/^cssclasses:/a\\  - table-max" "$manga_md"
    set input_file $manga_md
    set insert_file $HOME/.config/ortscripts/manga-dataview-insert

    set last_delim_line (grep -n '^---$' $input_file | cut -d: -f1 | tail -n 1)
    set after_line (math $last_delim_line + 1)

    head -n $last_delim_line $input_file >/tmp/temp_before.txt
    tail -n +$after_line $input_file >/tmp/temp_after.txt
    cat /tmp/temp_before.txt $insert_file /tmp/temp_after.txt >/tmp/temp_combined.txt

    mv /tmp/temp_combined.txt $input_file
end

set current_page $selection

echo $current_page
echo $old_page
echo $volume_md

set page_difference (math $current_page - $old_page)
set cur_date (date +%Y-%m-%d)

if grep "# Info" $volume_md
else
    echo "# Info" >>$volume_md
    echo "## Timeline" >>$volume_md
    echo "#" >>$volume_md
end

if test $current_page -gt $old_page
    if grep "Read:.*$cur_date" $volume_md
        set info_session_time (echo "Existing session is getting increased by $page_difference pages.")
        cp $volume_md /tmp/clone.md
        awk -v ex="$page_difference" -v date="$cur_date" '$0 ~ date {
      for (i = 1; i <= NF; i++) { 
        if ($i ~ /^[0-9]+$/) $i = $i + ex;} 
        }
        { print }' /tmp/clone.md >$volume_md
    else

        sed "/^## Timeline/{:a; n; /^#/!ba; i\\
\\
>[!info] Read: $page_difference pages [[$cur_date]]
}" $volume_md >/tmp/clone2.md
        mv /tmp/clone2.md $volume_md
    end
end

daily-note-injector mangapages $page_difference

set cur_date (date +"%Y-%m-%dT%H:%M:%S")
if rg "^last_read:" $manga_md
    sed -i '/last_read:/d' $manga_md
end
sed -i "/^date:/a\\last_read: $cur_date" $manga_md
